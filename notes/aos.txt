EVALUATING AOS STACK

Stack is of the form: e1 o1 e2 o2 ... ek
where ei is either of the form n or n%

n  = number
n% = number followed by the % sign
o  = operator
e  = extended number (n or n%)

Evaluation is from left to right:
  if there is only 1 element, we are done
  otherwise the size of the stack decrements by 1 at each step, as follows:
    e1               => e1 (done)
    e1 * e2 ...      => [e1 * e2] ...
    e1 + e2          => [e1 + e2] + ...
    e1 + e2 + ...    => [e1 + e2] + ...
    e1 + e2 * e3 ... => e1 + [e2 * e3] ...

Note: instead of '+', we can have '-', and instead of '*', we can have '/'.

Evaluating e:
  n    => n (done)
  n%   => n/100 except in:
             [n1 + n2%]: [n1 + n2% = n1 + n1.n2/100]
             [n1% + n2%]: [(n1+n2)%] (keep percent)

20  + 30  = 50
20  + 30% = 20 + 6 = 26
20% + 30  = .2 + 30 = 30.2
20% + 30% = 50%

20  * 30  = 50
20  * 30% = 20 * .3 = 6
20% * 30  = .2 * 30 = 6
20% * 30% = .2 * .3 = .06
